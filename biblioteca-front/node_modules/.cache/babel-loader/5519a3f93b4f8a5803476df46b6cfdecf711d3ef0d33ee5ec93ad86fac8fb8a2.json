{"ast":null,"code":"const BASE_URL = 'http://localhost:8080/livros';\nexport const api = {\n  getAllLivros: async () => {\n    try {\n      const response = await fetch(BASE_URL);\n      if (!response.ok) {\n        throw new Error('Erro ao buscar livros');\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('Erro ao buscar livros:', error);\n      throw error;\n    }\n  },\n  getLivroById: async id => {\n    try {\n      const response = await fetch(`${BASE_URL}/${id}`);\n      if (!response.ok) {\n        throw new Error('Livro n達o encontrado');\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('Erro ao buscar livro:', error);\n      throw error;\n    }\n  },\n  createLivro: async livro => {\n    try {\n      const response = await fetch(BASE_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(livro)\n      });\n      if (!response.ok) {\n        throw new Error('Erro ao criar livro');\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('Erro ao criar livro:', error);\n      throw error;\n    }\n  },\n  updateLivro: async (id, livro) => {\n    try {\n      const response = await fetch(`${BASE_URL}/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(livro)\n      });\n      if (!response.ok) {\n        throw new Error('Livro n達o encontrado');\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('Erro ao atualizar livro:', error);\n      throw error;\n    }\n  },\n  deleteLivro: async id => {\n    try {\n      const response = await fetch(`${BASE_URL}/${id}`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) {\n        throw new Error('Erro ao deletar livro');\n      }\n    } catch (error) {\n      console.error('Erro ao deletar livro:', error);\n      throw error;\n    }\n  }\n};","map":{"version":3,"names":["BASE_URL","api","getAllLivros","response","fetch","ok","Error","json","error","console","getLivroById","id","createLivro","livro","method","headers","body","JSON","stringify","updateLivro","deleteLivro"],"sources":["C:/Users/User/CaseAtomo/biblioteca-front/src/services/api.js"],"sourcesContent":["const BASE_URL = 'http://localhost:8080/livros';\r\n\r\nexport const api = {\r\n  getAllLivros: async () => {\r\n    try {\r\n      const response = await fetch(BASE_URL);\r\n      if (!response.ok) {\r\n        throw new Error('Erro ao buscar livros');\r\n      }\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('Erro ao buscar livros:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getLivroById: async (id) => {\r\n    try {\r\n      const response = await fetch(`${BASE_URL}/${id}`);\r\n      if (!response.ok) {\r\n        throw new Error('Livro n達o encontrado');\r\n      }\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('Erro ao buscar livro:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  createLivro: async (livro) => {\r\n    try {\r\n      const response = await fetch(BASE_URL, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(livro),\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error('Erro ao criar livro');\r\n      }\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('Erro ao criar livro:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  updateLivro: async (id, livro) => {\r\n    try {\r\n      const response = await fetch(`${BASE_URL}/${id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(livro),\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error('Livro n達o encontrado');\r\n      }\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('Erro ao atualizar livro:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  deleteLivro: async (id) => {\r\n    try {\r\n      const response = await fetch(`${BASE_URL}/${id}`, {\r\n        method: 'DELETE',\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error('Erro ao deletar livro');\r\n      }\r\n    } catch (error) {\r\n      console.error('Erro ao deletar livro:', error);\r\n      throw error;\r\n    }\r\n  },\r\n};\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}